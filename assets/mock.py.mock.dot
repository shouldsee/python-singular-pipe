strict digraph G {
	rankdir=TB
	"File('/tmp/singular_pipe.symbolic/root.copy_file_s\lubflow_transcribe_output_fasta.backup')" -> "'SINK'"
	"singular_pipe.runner.Caller(dotname='mock.copy_fil\le',prefix_named=File('/tmp/singular_pipe.symbolic/\lroot.copy_file_subflow_transcribe_output_fasta'))" -> "File('/tmp/singular_pipe.symbolic/root.copy_file_s\lubflow_transcribe_output_fasta.backup')"
	"CacheFile('/tmp/singular_pipe.symbolic/root.copy_f\lile_subflow_transcribe_output_fasta.cache_pk')" -> "'SINK'"
	"singular_pipe.runner.Caller(dotname='mock.copy_fil\le',prefix_named=File('/tmp/singular_pipe.symbolic/\lroot.copy_file_subflow_transcribe_output_fasta'))" -> "CacheFile('/tmp/singular_pipe.symbolic/root.copy_f\lile_subflow_transcribe_output_fasta.cache_pk')"
	"File('/tmp/singular_pipe.symbolic/root.transcribe.\lfasta')" -> "singular_pipe.runner.Caller(dotname='mock.copy_fil\le',prefix_named=File('/tmp/singular_pipe.symbolic/\lroot.copy_file_subflow_transcribe_output_fasta'))"
	"File('/tmp/singular_pipe.symbolic/root.copy_file_s\lubflow_mutate_output_fasta.backup')" -> "'SINK'"
	"singular_pipe.runner.Caller(dotname='mock.copy_fil\le',prefix_named=File('/tmp/singular_pipe.symbolic/\lroot.copy_file_subflow_mutate_output_fasta'))" -> "File('/tmp/singular_pipe.symbolic/root.copy_file_s\lubflow_mutate_output_fasta.backup')"
	"CacheFile('/tmp/singular_pipe.symbolic/root.copy_f\lile_subflow_mutate_output_fasta.cache_pk')" -> "'SINK'"
	"singular_pipe.runner.Caller(dotname='mock.copy_fil\le',prefix_named=File('/tmp/singular_pipe.symbolic/\lroot.copy_file_subflow_mutate_output_fasta'))" -> "CacheFile('/tmp/singular_pipe.symbolic/root.copy_f\lile_subflow_mutate_output_fasta.cache_pk')"
	"File('/tmp/singular_pipe.symbolic/root.mutate.fast\la')" -> "singular_pipe.runner.Caller(dotname='mock.copy_fil\le',prefix_named=File('/tmp/singular_pipe.symbolic/\lroot.copy_file_subflow_mutate_output_fasta'))"
	"singular_pipe.runner.Caller(dotname='mock.mutate',\lprefix_named=File('/tmp/singular_pipe.symbolic/roo\lt.mutate'))" -> "File('/tmp/singular_pipe.symbolic/root.mutate.fast\la')"
	"CacheFile('/tmp/singular_pipe.symbolic/root.mutate\l.cache_pk')" -> "'SINK'"
	"singular_pipe.runner.Caller(dotname='mock.mutate',\lprefix_named=File('/tmp/singular_pipe.symbolic/roo\lt.mutate'))" -> "CacheFile('/tmp/singular_pipe.symbolic/root.mutate\l.cache_pk')"
	"File('/tmp/singular_pipe.symbolic/root.transcribe.\lfasta')" -> "singular_pipe.runner.Caller(dotname='mock.mutate',\lprefix_named=File('/tmp/singular_pipe.symbolic/roo\lt.mutate'))"
	"singular_pipe.runner.Caller(dotname='mock.transcri\lbe',prefix_named=File('/tmp/singular_pipe.symbolic\l/root.transcribe'))" -> "File('/tmp/singular_pipe.symbolic/root.transcribe.\lfasta')"
	"CacheFile('/tmp/singular_pipe.symbolic/root.transc\lribe.cache_pk')" -> "'SINK'"
	"singular_pipe.runner.Caller(dotname='mock.transcri\lbe',prefix_named=File('/tmp/singular_pipe.symbolic\l/root.transcribe'))" -> "CacheFile('/tmp/singular_pipe.symbolic/root.transc\lribe.cache_pk')"
	"Prefix('/tmp/singular_pipe.symbolic/root.random_se\lq.seq')" -> "singular_pipe.runner.Caller(dotname='mock.transcri\lbe',prefix_named=File('/tmp/singular_pipe.symbolic\l/root.transcribe'))"
	"File('/tmp/singular_pipe.symbolic/root.copy_file_s\lubflow_random_seq_output_seq.backup')" -> "'SINK'"
	"singular_pipe.runner.Caller(dotname='mock.copy_fil\le',prefix_named=File('/tmp/singular_pipe.symbolic/\lroot.copy_file_subflow_random_seq_output_seq'))" -> "File('/tmp/singular_pipe.symbolic/root.copy_file_s\lubflow_random_seq_output_seq.backup')"
	"CacheFile('/tmp/singular_pipe.symbolic/root.copy_f\lile_subflow_random_seq_output_seq.cache_pk')" -> "'SINK'"
	"singular_pipe.runner.Caller(dotname='mock.copy_fil\le',prefix_named=File('/tmp/singular_pipe.symbolic/\lroot.copy_file_subflow_random_seq_output_seq'))" -> "CacheFile('/tmp/singular_pipe.symbolic/root.copy_f\lile_subflow_random_seq_output_seq.cache_pk')"
	"Prefix('/tmp/singular_pipe.symbolic/root.random_se\lq.seq')" -> "singular_pipe.runner.Caller(dotname='mock.copy_fil\le',prefix_named=File('/tmp/singular_pipe.symbolic/\lroot.copy_file_subflow_random_seq_output_seq'))"
	"CacheFile('/tmp/singular_pipe.symbolic/root.subflo\lw.random_seq.output.seq.cache_pk')" -> "'SINK'"
	"singular_pipe.runner.Caller(dotname='mock.copy_fil\le_single_node',prefix_named=File('/tmp/singular_pi\lpe.symbolic/root.subflow.random_seq.output.seq'))" -> "CacheFile('/tmp/singular_pipe.symbolic/root.subflo\lw.random_seq.output.seq.cache_pk')"
	"File('/tmp/singular_pipe.symbolic/root.subflow.ran\ldom_seq.output.seq')" -> "'SINK'"
	"singular_pipe.runner.Caller(dotname='mock.copy_fil\le_single_node',prefix_named=File('/tmp/singular_pi\lpe.symbolic/root.subflow.random_seq.output.seq'))" -> "File('/tmp/singular_pipe.symbolic/root.subflow.ran\ldom_seq.output.seq')"
	"Prefix('/tmp/singular_pipe.symbolic/root.random_se\lq.seq')" -> "singular_pipe.runner.Caller(dotname='mock.copy_fil\le_single_node',prefix_named=File('/tmp/singular_pi\lpe.symbolic/root.subflow.random_seq.output.seq'))"
	"'SOURCE'" -> "Prefix('/tmp/singular_pipe.symbolic/root.random_se\lq.seq')"
}
